\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{hinodeji}[2025/02/19 ひので字変換styファイル]

\usepackage{luacode}
% \usepackage{fontspec}
\usepackage[no-math,deluxe,expert,haranoaji]{luatexja-preset}

\newjfontfamily{\setHinodeji}{NKC02 Hinodeji}[
    Scale=MatchLowercase,
    FakeStretch=1,
]

\begin{luacode*}
-- 長音記号「ー」を前の文字の母音に置換する関数
function replace_long_vowel(text)
    local vowels = {
        -- 基本のカタカナ
        ["ア"] = "ア", ["イ"] = "イ", ["ウ"] = "ウ", ["エ"] = "エ", ["オ"] = "オ",
        ["カ"] = "ア", ["キ"] = "イ", ["ク"] = "ウ", ["ケ"] = "エ", ["コ"] = "オ",
        ["サ"] = "ア", ["シ"] = "イ", ["ス"] = "ウ", ["セ"] = "エ", ["ソ"] = "オ",
        ["タ"] = "ア", ["チ"] = "イ", ["ツ"] = "ウ", ["テ"] = "エ", ["ト"] = "オ",
        ["ナ"] = "ア", ["ニ"] = "イ", ["ヌ"] = "ウ", ["ネ"] = "エ", ["ノ"] = "オ",
        ["ハ"] = "ア", ["ヒ"] = "イ", ["フ"] = "ウ", ["ヘ"] = "エ", ["ホ"] = "オ",
        ["マ"] = "ア", ["ミ"] = "イ", ["ム"] = "ウ", ["メ"] = "エ", ["モ"] = "オ",
        ["ヤ"] = "ア",               ["ユ"] = "ウ",               ["ヨ"] = "オ",
        ["ラ"] = "ア", ["リ"] = "イ", ["ル"] = "ウ", ["レ"] = "エ", ["ロ"] = "オ",
        ["ワ"] = "ア",                             ["ヲ"] = "オ", ["ン"] = "ン",
        ["ガ"] = "ア", ["ギ"] = "イ", ["グ"] = "ウ", ["ゲ"] = "エ", ["ゴ"] = "オ",
        ["ザ"] = "ア", ["ジ"] = "イ", ["ズ"] = "ウ", ["ゼ"] = "エ", ["ゾ"] = "オ",
        ["ダ"] = "ア", ["ヂ"] = "イ", ["ヅ"] = "ウ", ["デ"] = "エ", ["ド"] = "オ",
        ["バ"] = "ア", ["ビ"] = "イ", ["ブ"] = "ウ", ["ベ"] = "エ", ["ボ"] = "オ",
        ["パ"] = "ア", ["ピ"] = "イ", ["プ"] = "ウ", ["ペ"] = "エ", ["ポ"] = "オ",

        -- 小さい文字の対応
        ["ァ"] = "ア", ["ィ"] = "イ", ["ゥ"] = "ウ", ["ェ"] = "エ", ["ォ"] = "オ",
        ["ャ"] = "ア", ["ュ"] = "ウ", ["ョ"] = "オ", ["ッ"] = "ウ", -- 促音は「ウ」に統一
    }
    local static_insertion_space = 5.0
    local static_insertions = {
        ["ア"] = true, ["イ"] = true, ["ウ"] = true, ["エ"] = true, ["オ"] = true,
        ["カ"] = true, ["キ"] = true, ["ク"] = true, ["ケ"] = true, ["コ"] = true,
        ["サ"] = true, ["シ"] = true, ["ス"] = true, ["セ"] = true, ["ソ"] = true,
        ["タ"] = true, ["チ"] = true, ["ツ"] = true, ["テ"] = true, ["ト"] = true,
        ["ナ"] = true, ["ニ"] = true, ["ヌ"] = true, ["ネ"] = true, ["ノ"] = true,
        ["ハ"] = true, ["ヒ"] = true, ["フ"] = true, ["ヘ"] = true, ["ホ"] = true,
        ["ミ"] = true, ["ム"] = true, ["メ"] = true, ["モ"] = true,
        ["ヤ"] = true, ["ユ"] = true, ["ヨ"] = true,
        ["ラ"] = true, ["リ"] = true, ["ル"] = true, ["レ"] = true,
        ["ワ"] = true, ["ヰ"] = true, ["ヱ"] = true, ["ヲ"] = true, ["ン"] = true,
        ["ガ"] = true, ["ギ"] = true, ["グ"] = true, ["ゲ"] = true, ["ゴ"] = true,
        ["ザ"] = true, ["ジ"] = true, ["ズ"] = true, ["ゼ"] = true, ["ゾ"] = true,
        ["ダ"] = true, ["ヂ"] = true, ["ヅ"] = true, ["デ"] = true, ["ド"] = true,
        ["バ"] = true, ["ビ"] = true, ["ブ"] = true, ["ベ"] = true, ["ボ"] = true,
        ["パ"] = true, ["ピ"] = true, ["プ"] = true, ["ペ"] = true, ["ポ"] = true,
        ["ァ"] = true, ["ィ"] = true, ["ゥ"] = true, ["ェ"] = true, ["ォ"] = true,
        ["ッ"] = true,
        ["ャ"] = true, ["ュ"] = true, ["ョ"] = true, ["ヮ"] = true,
    }
    local custom_insertions = {
        ["マ"] = 0.0, ["ロ"] = 1.5
    }


    -- 文字列の長さを取得
    local len = utf8.len(text)
    if not len then return text end

    -- 1文字ずつチェックしながら変換
    local result = {}
    local prev_char = nil  -- 直前のカタカナ
    for uchar in text:gmatch(utf8.charpattern) do
        if uchar == "ー" and prev_char then
            -- 直前の文字がカタカナならその母音を取得
            table.insert(result, vowels[prev_char] or uchar)
        else
            -- それ以外はそのまま追加
            table.insert(result, uchar)
        end
        -- hspace追加
        if static_insertions[uchar] then
            table.insert(result, "\\hspace{-" .. static_insertion_space .. "px}")
            -- table.insert(result, "\\hspace{-1.5px}")
        end
        if custom_insertions[uchar] then
            table.insert(result, "\\hspace{-" .. custom_insertions[uchar] .. "px}")
        end
        prev_char = uchar
    end

    return table.concat(result)
end

function mecab_yomi(text, iswakati, ismodify)
    local true_word = {
        ["true"] = true, ["1"] = true, [true] = true
    }
    local cmd_text = "echo \"" .. text .. "\" | mecab -Oyomi"
    if true_word[iswakati] then
        cmd_text = "echo \"" .. text .. "\" | mecab -Owakati | mecab -Oyomi"
    end
    local handle = io.popen(cmd_text, "r")
    if handle then
        local result = handle:read("*a")
        handle:close()
        -- 余計な改行・空白を削除
        result = string.gsub(result, "^ ", "")
        result = string.gsub(result, "%s+$", "")
        -- スペースの幅を増やす
        result = string.gsub(result, " ", "\\hspace{5px}")
        if true_word[ismodify] then
            -- いろいろ修正
            result = replace_long_vowel(result)
        end
        return result
    else
        return "(エラー)"
    end
end
\end{luacode*}

\newcommand{\MecabYomi}[2][true]{%
  \directlua{ tex.sprint( mecab_yomi([[#2]], [[#1]], true) ) }
}

\newcommand{\hinodeji}[2][true]{ {\setHinodeji \MecabYomi[#1]{#2}} }